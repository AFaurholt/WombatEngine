# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  GLFW_config = debug
  Wombat_config = debug
  TestProject_config = debug

else ifeq ($(config),release)
  GLFW_config = release
  Wombat_config = release
  TestProject_config = release

else ifeq ($(config),dist)
  GLFW_config = dist
  Wombat_config = dist
  TestProject_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := GLFW Wombat TestProject

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: GLFW

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C Wombat/vendor/glfw -f Makefile config=$(GLFW_config)
endif

Wombat: GLFW
ifneq (,$(Wombat_config))
	@echo "==== Building Wombat ($(Wombat_config)) ===="
	@${MAKE} --no-print-directory -C Wombat -f Makefile config=$(Wombat_config)
endif

TestProject: Wombat
ifneq (,$(TestProject_config))
	@echo "==== Building TestProject ($(TestProject_config)) ===="
	@${MAKE} --no-print-directory -C TestProject -f Makefile config=$(TestProject_config)
endif

clean:
	@${MAKE} --no-print-directory -C Wombat/vendor/glfw -f Makefile clean
	@${MAKE} --no-print-directory -C Wombat -f Makefile clean
	@${MAKE} --no-print-directory -C TestProject -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GLFW"
	@echo "   Wombat"
	@echo "   TestProject"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"